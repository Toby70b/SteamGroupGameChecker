{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toby Peel\\\\PhpstormProjects\\\\demoproject\\\\src\\\\components\\\\WrappedHorizontalLoginForm.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Icon, Input, Button } from 'antd';\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass HorizontalLoginForm extends React.Component {\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form; // Only show error after a field is touched.\n\n    const inputError = isFieldTouched('input') && getFieldError('input');\n    return React.createElement(Form, {\n      layout: \"inline\",\n      onSubmit: this.props.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      wrapperCol: {\n        sm: 24\n      },\n      style: {\n        width: \"60%\"\n      },\n      validateStatus: inputError ? 'error' : '',\n      help: inputError || '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, getFieldDecorator('input', {\n      rules: [{\n        required: this.props.required,\n        message: this.props.requiredMessage\n      }]\n    })(React.createElement(Input, {\n      placeholder: this.props.placeholder,\n      addonBefore: this.props.label,\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: \"plus\",\n      type: \"primary\",\n      htmlType: \"submit\",\n      disabled: hasErrors(getFieldsError()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst WrappedHorizontalLoginForm = Form.create({\n  name: 'horizontal_login'\n})(HorizontalLoginForm);\nexport default WrappedHorizontalLoginForm;","map":{"version":3,"sources":["C:/Users/Toby Peel/PhpstormProjects/demoproject/src/components/WrappedHorizontalLoginForm.js"],"names":["React","Form","Icon","Input","Button","hasErrors","fieldsError","Object","keys","some","field","HorizontalLoginForm","Component","componentDidMount","props","form","validateFields","render","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","inputError","onSubmit","sm","width","rules","required","message","requiredMessage","placeholder","label","WrappedHorizontalLoginForm","create","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,QAA0C,MAA1C;;AAGA,SAASC,SAAT,CAAmBC,WAAnB,EAAgC;AAC5B,SAAOC,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,IAAzB,CAA8BC,KAAK,IAAIJ,WAAW,CAACI,KAAD,CAAlD,CAAP;AACH;;AAED,MAAMC,mBAAN,SAAkCX,KAAK,CAACY,SAAxC,CAAkD;AAC9CC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,iBAAF;AAAqBC,MAAAA,cAArB;AAAqCC,MAAAA,aAArC;AAAoDC,MAAAA;AAApD,QAAuE,KAAKP,KAAL,CAAWC,IAAxF,CADK,CAEL;;AACA,UAAMO,UAAU,GAAGD,cAAc,CAAC,OAAD,CAAd,IAA2BD,aAAa,CAAC,OAAD,CAA3D;AACA,WACI,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWS,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,UAAU,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAvB;AAAmC,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA1C;AAA2D,MAAA,cAAc,EAAEH,UAAU,GAAG,OAAH,GAAa,EAAlG;AAAsG,MAAA,IAAI,EAAEA,UAAU,IAAI,EAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,iBAAiB,CAAC,OAAD,EAAU;AACxBQ,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWa,QAAvB;AAAkCC,QAAAA,OAAO,EAAE,KAAKd,KAAL,CAAWe;AAAtD,OAAD;AADiB,KAAV,CAAjB,CAEE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAE,KAAKf,KAAL,CAAWgB,WAA/B;AAA4C,MAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWiB,KAApE;AAA2E,MAAA,KAAK,EAAE;AAAEN,QAAAA,KAAK,EAAE;AAAT,OAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADL,CADJ,EAOI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,IAAI,EAAC,SAAzB;AAAmC,MAAA,QAAQ,EAAC,QAA5C;AAAqD,MAAA,QAAQ,EAAEpB,SAAS,CAACc,cAAc,EAAf,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAPJ,CADJ;AAeH;;AA1B6C;;AA6BlD,MAAMa,0BAA0B,GAAG/B,IAAI,CAACgC,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAA0CvB,mBAA1C,CAAnC;AACA,eAAeqB,0BAAf","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Icon, Input, Button } from 'antd';\r\n\r\n\r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass HorizontalLoginForm extends React.Component {\r\n    componentDidMount() {\r\n        // To disable submit button at the beginning.\r\n        this.props.form.validateFields();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        // Only show error after a field is touched.\r\n        const inputError = isFieldTouched('input') && getFieldError('input');\r\n        return (\r\n            <Form layout=\"inline\" onSubmit={this.props.onSubmit}>\r\n                <Form.Item wrapperCol={{ sm: 24 }} style={{ width: \"60%\"}} validateStatus={inputError ? 'error' : ''} help={inputError || ''}>\r\n                    {getFieldDecorator('input', {\r\n                        rules: [{ required: this.props.required , message: this.props.requiredMessage }],\r\n                    })(<Input placeholder={this.props.placeholder} addonBefore={this.props.label} style={{ width: '100%' }} />)}\r\n                </Form.Item>\r\n\r\n                <Form.Item >\r\n                    <Button icon=\"plus\" type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedHorizontalLoginForm = Form.create({ name: 'horizontal_login' })(HorizontalLoginForm);\r\nexport default WrappedHorizontalLoginForm;\r\n\r\n"]},"metadata":{},"sourceType":"module"}