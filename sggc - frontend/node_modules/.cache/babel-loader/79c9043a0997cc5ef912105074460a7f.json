{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toby Peel\\\\PhpstormProjects\\\\demoproject\\\\src\\\\components\\\\GroupGameSearchPanel.js\";\nimport React from \"react\";\nimport 'antd/dist/antd.css';\nimport { Input, Button, Row, Card, Table, Popconfirm, Typography, Form, Checkbox, Icon } from 'antd';\nconst {\n  Search\n} = Input;\nconst {\n  Text\n} = Typography;\n\nclass GroupGameSearchPanel extends React.Component {\n  constructor() {\n    super();\n\n    this.collectSteamIds = () => {\n      var steamIds = [];\n      this.state.dataSource.forEach(function (item) {\n        steamIds.push(item.id);\n      });\n      return steamIds;\n    };\n\n    this.handleSearch = () => {\n      this.props.onSearch(this.collectSteamIds());\n    };\n\n    this.handleDelete = id => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.id !== id)\n      });\n    };\n\n    this.handleAdd = value => {\n      const {\n        count,\n        dataSource\n      } = this.state;\n      const newData = {\n        id: value\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        steamIdInput: ''\n      });\n    };\n\n    this.columns = [{\n      title: 'Steam Id',\n      dataIndex: 'id',\n      key: 'id'\n    }, {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) => this.state.dataSource.length >= 1 ? React.createElement(Popconfirm, {\n        title: \"Are you sure?\",\n        onConfirm: () => this.handleDelete(record.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Delete\")) : null\n    }];\n    this.state = {\n      dataSource: []\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n    const usernameError = isFieldTouched('username') && getFieldError('username');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Search for Common Games\"),\n      style: {\n        width: 1000\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Text, {\n      level: 2,\n      type: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.props.errorMessage)), React.createElement(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Remember me\")), React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Forgot password\"), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"register now!\")))), React.createElement(Table, {\n      dataSource: this.state.dataSource,\n      columns: this.columns,\n      rowKey: record => record.id,\n      scroll: {\n        y: 300\n      },\n      pagination: false,\n      style: {\n        marginBottom: 18\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Row, {\n      type: \"flex\",\n      justify: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      icon: \"search\",\n      onClick: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Search\"))));\n  }\n\n}\n\nexport default GroupGameSearchPanel;","map":{"version":3,"sources":["C:/Users/Toby Peel/PhpstormProjects/demoproject/src/components/GroupGameSearchPanel.js"],"names":["React","Input","Button","Row","Card","Table","Popconfirm","Typography","Form","Checkbox","Icon","Search","Text","GroupGameSearchPanel","Component","constructor","collectSteamIds","steamIds","state","dataSource","forEach","item","push","id","handleSearch","props","onSearch","handleDelete","setState","filter","handleAdd","value","count","newData","steamIdInput","columns","title","dataIndex","key","render","text","record","length","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","form","usernameError","width","marginBottom","errorMessage","handleSubmit","rules","required","message","color","valuePropName","initialValue","y"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0CC,UAA1C,EAAsDC,UAAtD,EAAkEC,IAAlE,EAAwEC,QAAxE,EAAkFC,IAAlF,QAA8F,MAA9F;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaV,KAAnB;AACA,MAAM;AAAEW,EAAAA;AAAF,IAAWL,UAAjB;;AAGA,MAAMM,oBAAN,SAAmCb,KAAK,CAACc,SAAzC,CAAmD;AAC/CC,EAAAA,WAAW,GAAG;AACV;;AADU,SA2BdC,eA3Bc,GA2BI,MAAK;AACnB,UAAIC,QAAQ,GAAG,EAAf;AACA,WAAKC,KAAL,CAAWC,UAAX,CAAsBC,OAAtB,CAA8B,UAAUC,IAAV,EAAgB;AAC1CJ,QAAAA,QAAQ,CAACK,IAAT,CAAcD,IAAI,CAACE,EAAnB;AACH,OAFD;AAGA,aAAON,QAAP;AACH,KAjCa;;AAAA,SAmCdO,YAnCc,GAmCC,MAAK;AAChB,WAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKV,eAAL,EAApB;AACH,KArCa;;AAAA,SAuCdW,YAvCc,GAuCCJ,EAAE,IAAI;AACjB,YAAMJ,UAAU,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,UAAf,CAAnB;AACA,WAAKS,QAAL,CAAc;AAAET,QAAAA,UAAU,EAAEA,UAAU,CAACU,MAAX,CAAkBR,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYA,EAAtC;AAAd,OAAd;AACH,KA1Ca;;AAAA,SA4CdO,SA5Cc,GA4CDC,KAAD,IAAU;AAClB,YAAM;AAAEC,QAAAA,KAAF;AAASb,QAAAA;AAAT,UAAwB,KAAKD,KAAnC;AACA,YAAMe,OAAO,GAAG;AACbV,QAAAA,EAAE,EAACQ;AADU,OAAhB;AAGA,WAAKH,QAAL,CAAc;AACVT,QAAAA,UAAU,EAAE,CAAC,GAAGA,UAAJ,EAAgBc,OAAhB,CADF;AAEVC,QAAAA,YAAY,EAAC;AAFH,OAAd;AAIH,KArDa;;AAEV,SAAKC,OAAL,GAAe,CACX;AACIC,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,SAAS,EAAE,IAFf;AAGIC,MAAAA,GAAG,EAAE;AAHT,KADW,EAOX;AACIF,MAAAA,KAAK,EAAE,QADX;AAEIE,MAAAA,GAAG,EAAE,QAFT;AAGIC,MAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,KACJ,KAAKvB,KAAL,CAAWC,UAAX,CAAsBuB,MAAtB,IAAgC,CAAhC,GACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,eAAlB;AAAkC,QAAA,SAAS,EAAE,MAAM,KAAKf,YAAL,CAAkBc,MAAM,CAAClB,EAAzB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,GAII;AARZ,KAPW,CAAf;AAmBA,SAAKL,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAIH;;AA8BDoB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEI,MAAAA,iBAAF;AAAqBC,MAAAA,cAArB;AAAqCC,MAAAA,aAArC;AAAoDC,MAAAA;AAApD,QAAuE,KAAKrB,KAAL,CAAWsB,IAAxF;AACA,UAAMC,aAAa,GAAGF,cAAc,CAAC,UAAD,CAAd,IAA8BD,aAAa,CAAC,UAAD,CAAjE;AACA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAb;AAAgD,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAT,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,OAAO,EAAC,QAAzB;AAAkC,MAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAC;AAAd,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAAb;AAAgB,MAAA,IAAI,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,KAAKzB,KAAL,CAAW0B,YAA1C,CADJ,CADJ,EAII;AAAK,MAAA,KAAK,EAAE;AAACD,QAAAA,YAAY,EAAC;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKE,YAArB;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,iBAAiB,CAAC,UAAD,EAAa;AAC3BU,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD;AADoB,KAAb,CAAjB,CAGG,oBAAC,KAAD;AACI,MAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADZ;AAEI,MAAA,WAAW,EAAC,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADL,CADJ,EAWI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKb,iBAAiB,CAAC,UAAD,EAAa;AAC3BU,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD;AADoB,KAAb,CAAjB,CAGG,oBAAC,KAAD;AACI,MAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADZ;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,WAAW,EAAC,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADL,CAXJ,EAsBI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKb,iBAAiB,CAAC,UAAD,EAAa;AAC3Bc,MAAAA,aAAa,EAAE,SADY;AAE3BC,MAAAA,YAAY,EAAE;AAFa,KAAb,CAAjB,CAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADL,EAKI;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAiC,MAAA,IAAI,EAAC,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALJ,EAQI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,SAAS,EAAC,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,SAWO;AAAG,MAAA,IAAI,EAAC,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAXP,CAtBJ,CADJ,CAJJ,EA0CI,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAE,KAAKxC,KAAL,CAAWC,UAA9B;AAA0C,MAAA,OAAO,EAAE,KAAKgB,OAAxD;AAAiE,MAAA,MAAM,EAAEM,MAAM,IAAIA,MAAM,CAAClB,EAA1F;AAA8F,MAAA,MAAM,EAAE;AAACoC,QAAAA,CAAC,EAAC;AAAH,OAAtG;AAA+G,MAAA,UAAU,EAAE,KAA3H;AAAkI,MAAA,KAAK,EAAE;AAACT,QAAAA,YAAY,EAAC;AAAd,OAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CJ,EA2CI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,OAAO,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,IAAI,EAAC,QAA5B;AAAqC,MAAA,OAAO,EAAE,KAAK1B,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CA3CJ,CADJ,CADA;AAqDH;;AAhH8C;;AAkHnD,eAAeX,oBAAf","sourcesContent":["import React from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport { Input, Button, Row, Card, Table, Popconfirm, Typography, Form, Checkbox, Icon } from 'antd';\r\n\r\nconst { Search } = Input;\r\nconst { Text } = Typography;\r\n\r\n\r\nclass GroupGameSearchPanel extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.columns = [\r\n            {\r\n                title: 'Steam Id',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n            },\r\n\r\n            {\r\n                title: 'Action',\r\n                key: 'action',\r\n                render: (text, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm title=\"Are you sure?\" onConfirm={() => this.handleDelete(record.id)}>\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n            },\r\n        ]\r\n\r\n        this.state = {\r\n            dataSource: [\r\n            ],\r\n        }\r\n    }\r\n\r\n    collectSteamIds = () =>{\r\n        var steamIds = [];\r\n        this.state.dataSource.forEach(function (item) {\r\n            steamIds.push(item.id);\r\n        });\r\n        return steamIds\r\n    }\r\n\r\n    handleSearch = () =>{\r\n        this.props.onSearch(this.collectSteamIds())\r\n    }\r\n\r\n    handleDelete = id => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({ dataSource: dataSource.filter(item => item.id !== id) });\r\n    };\r\n\r\n    handleAdd = (value) =>{\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n           id:value\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            steamIdInput:''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        const usernameError = isFieldTouched('username') && getFieldError('username');\r\n        return(\r\n        <div>\r\n            <Card title={<h2>Search for Common Games</h2>}  style={{ width: 1000 }}>\r\n                <Row type=\"flex\" justify=\"center\" style={{marginBottom:16}}>\r\n                    <Text level={2} type=\"danger\">{this.props.errorMessage}</Text>\r\n                </Row>\r\n                <div style={{marginBottom:16}}>\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                            {getFieldDecorator('username', {\r\n                                rules: [{ required: true, message: 'Please input your username!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"Username\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{ required: true, message: 'Please input your Password!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('remember', {\r\n                                valuePropName: 'checked',\r\n                                initialValue: true,\r\n                            })(<Checkbox>Remember me</Checkbox>)}\r\n                            <a className=\"login-form-forgot\" href=\"\">\r\n                                Forgot password\r\n                            </a>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                Log in\r\n                            </Button>\r\n                            Or <a href=\"\">register now!</a>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <Table dataSource={this.state.dataSource} columns={this.columns} rowKey={record => record.id} scroll={{y:300}} pagination={false} style={{marginBottom:18}} />\r\n                <Row type=\"flex\" justify=\"end\">\r\n                    <Button type=\"primary\" icon=\"search\" onClick={this.handleSearch}>\r\n                        Search\r\n                    </Button>\r\n                </Row>\r\n            </Card>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default GroupGameSearchPanel;\r\n"]},"metadata":{},"sourceType":"module"}