{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toby Peel\\\\PhpstormProjects\\\\demoproject\\\\src\\\\components\\\\GroupGameSearchPage.js\";\nimport React from \"react\";\nimport { Typography, Row } from \"antd\";\nimport GroupGameSearchPanel from \"./GroupGameSearchPanel\";\nimport GroupGameSearchResultsPanel from \"./GroupGameSearchResultsPanel\";\nconst {\n  Title\n} = Typography;\nconst notEnoughIdsEnteredErrorMsg = \"Please enter at least 2 Steam Id's\";\nconst fetchErrorMessage = \"There was an error, please try again...\";\n\nclass GroupGameSearchPage extends React.Component {\n  constructor() {\n    super();\n\n    this.handleErrors = response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    };\n\n    this.onFetchError = error => {\n      console.log(error);\n      this.setState({\n        displayResults: false,\n        resultsLoading: false,\n        errorMessage: fetchErrorMessage\n      });\n    };\n\n    this.handleSearch = steamIds => {\n      var data = {\n        \"steamIds\": steamIds\n      };\n      var options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;'\n        },\n        body: JSON.stringify(data)\n      };\n      this.setState({\n        displayResults: true,\n        resultsLoading: true,\n        errorMessage: ''\n      });\n      fetch('http://localhost:8080/users/', options).then(this.handleErrors).then(response => {\n        return response.json();\n      }).then(jsonResponse => this.setState({\n        resultsDataSource: jsonResponse,\n        resultsLoading: false\n      })).catch(error => this.onFetchError(error));\n    };\n\n    this.state = {\n      resultsDataSource: [],\n      displayResults: false,\n      resultsLoading: false,\n      errorMessage: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Steam Group Game Checker\")), React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(GroupGameSearchPanel, {\n      onSearch: this.handleSearch,\n      errorMessage: this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.displayResults ? React.createElement(GroupGameSearchResultsPanel, {\n      isLoading: this.state.resultsLoading,\n      dataSource: this.state.resultsDataSource,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default GroupGameSearchPage;","map":{"version":3,"sources":["C:/Users/Toby Peel/PhpstormProjects/demoproject/src/components/GroupGameSearchPage.js"],"names":["React","Typography","Row","GroupGameSearchPanel","GroupGameSearchResultsPanel","Title","notEnoughIdsEnteredErrorMsg","fetchErrorMessage","GroupGameSearchPage","Component","constructor","handleErrors","response","ok","Error","statusText","onFetchError","error","console","log","setState","displayResults","resultsLoading","errorMessage","handleSearch","steamIds","data","options","method","headers","body","JSON","stringify","fetch","then","json","jsonResponse","resultsDataSource","catch","state","render","marginBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Typography,Row} from \"antd\";\r\nimport GroupGameSearchPanel from \"./GroupGameSearchPanel\";\r\nimport GroupGameSearchResultsPanel from \"./GroupGameSearchResultsPanel\";\r\n\r\nconst { Title } = Typography;\r\nconst notEnoughIdsEnteredErrorMsg = \"Please enter at least 2 Steam Id's\"\r\nconst fetchErrorMessage = \"There was an error, please try again...\"\r\n\r\nclass GroupGameSearchPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            resultsDataSource: [],\r\n            displayResults: false,\r\n            resultsLoading: false,\r\n            errorMessage: ''\r\n        }\r\n    }\r\n\r\n    handleErrors = (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    onFetchError = (error) =>{\r\n        console.log(error);\r\n        this.setState({displayResults:false, resultsLoading:false, errorMessage:fetchErrorMessage, });\r\n    }\r\n\r\n    handleSearch = (steamIds) => {\r\n        var data = {\"steamIds\": steamIds}\r\n        var options = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json;'},\r\n            body: JSON.stringify(data)\r\n        }\r\n        this.setState({displayResults: true, resultsLoading: true, errorMessage: '',})\r\n        fetch('http://localhost:8080/users/', options)\r\n            .then(this.handleErrors)\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then((jsonResponse) => this.setState({resultsDataSource: jsonResponse, resultsLoading: false}))\r\n            .catch(error => this.onFetchError(error));\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Title>Steam Group Game Checker</Title>\r\n                </Row>\r\n\r\n                <Row type=\"flex\" justify=\"center\" style={{marginBottom:16}}>\r\n                    <GroupGameSearchPanel\r\n                    onSearch = {this.handleSearch}\r\n                    errorMessage ={this.state.errorMessage}>\r\n                    </GroupGameSearchPanel>\r\n                </Row>\r\n\r\n                <Row type=\"flex\" justify=\"center\" style={{marginBottom:16}}>\r\n                    { this.state.displayResults ?\r\n                        <GroupGameSearchResultsPanel\r\n                            isLoading={this.state.resultsLoading}\r\n                            dataSource={this.state.resultsDataSource}\r\n                        >\r\n                        </GroupGameSearchResultsPanel> : null }\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupGameSearchPage\r\n"]},"metadata":{},"sourceType":"module"}