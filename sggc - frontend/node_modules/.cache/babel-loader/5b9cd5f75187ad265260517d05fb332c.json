{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toby Peel\\\\PhpstormProjects\\\\demoproject\\\\src\\\\components\\\\WrappedHorizontalLoginForm.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Icon, Input, Button } from 'antd';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 12\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 12\n    },\n    sm: {\n      span: 12\n    }\n  }\n};\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass HorizontalLoginForm extends React.Component {\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form; // Only show error after a field is touched.\n\n    const steamId = isFieldTouched('steamId') && getFieldError('steamId');\n    return React.createElement(Form, {\n      layout: \"inline\",\n      onSubmit: this.props.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      wrapperCol: {\n        sm: 24\n      },\n      style: {\n        width: \"60%\"\n      },\n      validateStatus: steamId ? 'error' : '',\n      help: steamId || '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, getFieldDecorator('steamId', {\n      rules: [{\n        required: true,\n        message: 'Please input a steam Id!'\n      }]\n    })(React.createElement(Input, {\n      addonBefore: \"Steam Id:\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: \"plus\",\n      type: \"primary\",\n      htmlType: \"submit\",\n      disabled: hasErrors(getFieldsError()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Add\")));\n  }\n\n}\n\nconst WrappedHorizontalLoginForm = Form.create({\n  name: 'horizontal_login'\n})(HorizontalLoginForm);\nexport default WrappedHorizontalLoginForm;","map":{"version":3,"sources":["C:/Users/Toby Peel/PhpstormProjects/demoproject/src/components/WrappedHorizontalLoginForm.js"],"names":["React","Form","Icon","Input","Button","formItemLayout","labelCol","xs","span","sm","wrapperCol","hasErrors","fieldsError","Object","keys","some","field","HorizontalLoginForm","Component","componentDidMount","props","form","validateFields","render","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","steamId","onSubmit","width","rules","required","message","WrappedHorizontalLoginForm","create","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,QAA0C,MAA1C;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADE;AAENC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFE,GADS;AAKnBE,EAAAA,UAAU,EAAE;AACRH,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADI;AAERC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFI;AALO,CAAvB;;AAWA,SAASG,SAAT,CAAmBC,WAAnB,EAAgC;AAC5B,SAAOC,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,IAAzB,CAA8BC,KAAK,IAAIJ,WAAW,CAACI,KAAD,CAAlD,CAAP;AACH;;AAED,MAAMC,mBAAN,SAAkCjB,KAAK,CAACkB,SAAxC,CAAkD;AAC9CC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,iBAAF;AAAqBC,MAAAA,cAArB;AAAqCC,MAAAA,aAArC;AAAoDC,MAAAA;AAApD,QAAuE,KAAKP,KAAL,CAAWC,IAAxF,CADK,CAGL;;AACA,UAAMO,OAAO,GAAGD,cAAc,CAAC,SAAD,CAAd,IAA6BD,aAAa,CAAC,SAAD,CAA1D;AACA,WACI,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWS,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,UAAU,EAAE;AAAEpB,QAAAA,EAAE,EAAE;AAAN,OAAvB;AAAmC,MAAA,KAAK,EAAE;AAAEqB,QAAAA,KAAK,EAAE;AAAT,OAA1C;AAA2D,MAAA,cAAc,EAAEF,OAAO,GAAG,OAAH,GAAa,EAA/F;AAAmG,MAAA,IAAI,EAAEA,OAAO,IAAI,EAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,iBAAiB,CAAC,SAAD,EAAY;AAC1BO,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD;AADmB,KAAZ,CAAjB,CAEE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAE,WAApB;AAAiC,MAAA,KAAK,EAAE;AAAEH,QAAAA,KAAK,EAAE;AAAT,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADL,CADJ,EAOI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,IAAI,EAAC,SAAzB;AAAmC,MAAA,QAAQ,EAAC,QAA5C;AAAqD,MAAA,QAAQ,EAAEnB,SAAS,CAACc,cAAc,EAAf,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAPJ,CADJ;AAeH;;AA3B6C;;AA8BlD,MAAMS,0BAA0B,GAAGjC,IAAI,CAACkC,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAA0CnB,mBAA1C,CAAnC;AACA,eAAeiB,0BAAf","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Icon, Input, Button } from 'antd';\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 12 },\r\n        sm: { span: 12 },\r\n    },\r\n};\r\n\r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass HorizontalLoginForm extends React.Component {\r\n    componentDidMount() {\r\n        // To disable submit button at the beginning.\r\n        this.props.form.validateFields();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n\r\n        // Only show error after a field is touched.\r\n        const steamId = isFieldTouched('steamId') && getFieldError('steamId');\r\n        return (\r\n            <Form layout=\"inline\" onSubmit={this.props.onSubmit}>\r\n                <Form.Item wrapperCol={{ sm: 24 }} style={{ width: \"60%\"}} validateStatus={steamId ? 'error' : ''} help={steamId || ''}>\r\n                    {getFieldDecorator('steamId', {\r\n                        rules: [{ required: true, message: 'Please input a steam Id!' }],\r\n                    })(<Input addonBefore={\"Steam Id:\"} style={{ width: '100%' }} />)}\r\n                </Form.Item>\r\n\r\n                <Form.Item >\r\n                    <Button icon=\"plus\" type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>\r\n                        Add\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedHorizontalLoginForm = Form.create({ name: 'horizontal_login' })(HorizontalLoginForm);\r\nexport default WrappedHorizontalLoginForm;\r\n\r\n"]},"metadata":{},"sourceType":"module"}